package maxpower.lmem.cpuaccess;

import com.maxeler.maxcompiler.v2.managers.custom.CustomManager;
import com.maxeler.maxcompiler.v2.managers.custom.DFELink;
import com.maxeler.maxcompiler.v2.managers.custom.stdlib.LMemCommandGroup;
import com.maxeler.maxcompiler.v2.managers.custom.stdlib.LMemInterface;

public class LMemCpuAccess {
	private static int instanceCount = 0;

	public static void create(CustomManager owner, LMemInterface iface) {
		instanceCount++;

		if (instanceCount > 1)
			throw new RuntimeException(
					String.format("LMemCpuAccess: Should only be instantiated once.\n"));

		DFELink cmds = owner.addStreamFromCPU("CpuAccessLMemCommands");
		LMemCommandGroup control = iface.addCommandGroup("CpuAccessControlGroup", cmds);


		control.addStreamToLMem("LMemCpuWrite") <== owner.addStreamFromCPU("CpuToLMem");
		owner.addStreamToCPU("LMemToCpu") <== control.addStreamFromLMem("LMemCpuRead");
	}
}
